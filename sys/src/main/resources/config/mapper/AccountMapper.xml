<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bw.fit.system.account.mapper.AccountMapper">

    <select id="getByLogName"   parameterType="String" resultType="TAccount">
		select * from t_account where isdeleted='0' and logname = #{logName,jdbcType=VARCHAR}
	</select>

	<sql id="paginationSql">
		<![CDATA[ and rn >#{start_num} and rn <= #{end_num} ]]>
	</sql>
	<select id="getAccountIdByName"  parameterType="String" resultType="account">
		select * from t_account where isdeleted='0' and logname= #{logName,jdbcType=VARCHAR}
	</select>

	<select id="getAccount"  parameterType="String" resultType="account">
        select a.*,u.name,u.name_pinyin,u.card,u.type,u.isvisible,u.email,u.phone,u.address,ao.orgid temp_str1 ,
        u.firstedu,u.highedu
        from t_account a,t_user u,t_account2organization ao where
      1=1 and a.userid = u.code and ao.accountid = a.id  and a.id = #{id,jdbcType=VARCHAR}
	</select>

	<select id="getRolesByAccount"  parameterType="String" resultType="tRole">
		select r.* from t_account a,t_account2role ar,t_role r
		where a.id = ar.accountid and ar.roleid = r.id
		and r.isdeleted ='0' and a.logname = #{logName}
	</select>

	<select id="getOrgByAccount" parameterType="String" resultType="tOrganization">
		select o.* from t_account2organization ao ,t_organization o ,t_account ac
		where ao.orgid = o.id and o.isdeleted='0' and ao.accountid  =ac.id and ac.logname = #{logName}
	</select>

	<select id="getAccounts" parameterType="account" resultType="account">
		select * from (select u.*,a.id tempStr2,a.create_time tempStr3 ,a.isdeleted tempStr1,a.logname
		from t_account a,t_user u
		where u.code = a.userid  and u.isdeleted='0'
		and  a.logname like '%'||#{logName,jdbcType=VARCHAR}||'%' and  u.name like '%'||#{name,jdbcType=VARCHAR}||'%'
		) cc  where 1=1
	</select>
	<update id="update"  parameterType="account">
		update t_account set isdeleted='0',userid=#{userId},
		logname=#{logName,jdbcType=VARCHAR},logpwd=#{logPwd,jdbcType=VARCHAR} where userid = #{userId}
	</update>
	<update id="delete"  parameterType="String">
		update t_account set isdeleted='1',version_time=sysdate where id = #{id}
	</update>
	<insert id="insert" parameterType="account">
		insert into t_account(id,userid,logname,logpwd,creator,create_time,version_time,isdeleted,createorgid)
		values (#{id},#{userId},#{logName,jdbcType=VARCHAR},#{logPwd,jdbcType=VARCHAR},#{creator,jdbcType=VARCHAR},sysdate,sysdate,'0',#{createOrgId,jdbcType=VARCHAR})
	</insert>

	<!-- insertAccount2Position -->
	<insert id="insertAccount2Position" parameterType="map">
		insert into t_account2position(accountId,positionId) values (#{accountId},#{positionId})
	</insert>
	<insert id="insertAccount2Org" parameterType="map">
		insert into t_account2organization(accountId,orgId) values (#{accountId},#{orgId})
	</insert>
	<insert id="insertRole2Account" parameterType="TRole2Account">
		insert into t_account2role(accountId,roleid) values (#{accountId,jdbcType=VARCHAR},#{roleId,jdbcType=VARCHAR})
	</insert>

	<select id="getPositionsOfTheAccount"  parameterType="String" resultType="TPosition">
		select p.* from t_position p,t_account2position ap
      where ap.positionid = p.id and p.isdeleted='0'
      and ap.accountid=#{accountId}
	</select>

	<update id="transferAccount" parameterType="account">
		update account set userid = #{userId,jdbcType=VARCHAR} where id = #{id,jdbcType=VARCHAR}
	</update>

	<select id="getOwnAuths"  parameterType="String" resultType="TAuthority">
		select a.* from t_authority a ,data_dict dd,t_role2authority ra,t_account2role ar
 		where a.code = dd.dict_value and ra.roleid = ar.roleid and ra.authorityid = a.code
 		 and dd.parent_id='f526f5080da94885b51c1ecb16ac99df'  and ar.accountid = #{accountId,jdbcType=VARCHAR}
	</select>

</mapper>